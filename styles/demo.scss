@import "variables";
@import "reset";

// mixin & include
@mixin para-style($size, $style) {
    font-size: $size;
    text-align: $style;
    margin: 10px 0px;
}

#about p {
    @include para-style(20px, left)
}
#education p {
    @include para-style(15px, center)
}

// extend & inheritance
.btn {
    border: none;
    padding: 20px 30px;
    text-align: center;
    font-size: 15px;
    cursor: pointer
}

.download-btn {
    @extend .btn; 
    background: yellow;
}
.learn-btn {
    @extend .btn;
    background-color: red;
    border-radius: 30%;
}

// @each
$colors: (color1: red, color2: blue, color3: yellow);

@each $key, $color in $colors {
    .#{$color}-text {color: $color}
}

// if, elseif, else
@mixin setFontSize($value) {
   @if $value == small {
       font-size: 10px;
   } 
   @else if $value == medium {
       font-size: 16px;
   } 
   @else if $value == large {
       font-size: 20px;
   }
   @else {
       font-size: none;
   }
}

// for, while
[class*="col-"] {
    float: left;
}
// @for $i from 1 through 13 {
//     .col-#{$i} {
//         width: 100% / 12 * $i
//     }
// }
// while loop ----
$i: 1;
@while $i < 13 {
    .col-#{$i} {
        width: 100% / 12 * $i;
    }
    $i: $i +1;
}

header {
    background-color: $header-bgcolor;
}
// nesting scss
nav {
    padding-top: 15px;
    ul {
        list-style-type: none;
        li {
            display: inline-block;
            margin: 0 15px;
            a {
                display: inline-block;
                color: white;
                text-decoration: none;
                padding: 10px;
                transition: 0.4s;
                border-radius: 5px;
                @include setFontSize(large)
            }
            a:hover {
                background: #000000;
            }
        }
    }
}
//  end nesting
main {
    background-color: $main-bgcolor;
}
// #about p {
//     font-size: $para-size;
// }

footer {
    background-color: $footer-bgcolor;
}